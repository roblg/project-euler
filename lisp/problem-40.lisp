(let ((current 0)
      (current-string ""))
  (defun next-char ()
    (if (= 0 (length current-string))
	(progn
	  (incf current)
	  (setf current-string (format nil "~A" current))))
    (let ((first-char (char current-string 0)))
      (setf current-string (subseq current-string 1))
      (- (char-code first-char) (char-code #\0)))))

(defun problem-40 ()
  (do ((i 1 (1+ i))
       (sum 1))
      ((> i 1000000) sum)
    (let ((digit (next-char)))
      (if (or (= i 1)
	      (= i 10)
	      (= i 100)
	      (= i 1000)
	      (= i 10000)
	      (= i 100000)
	      (= i 1000000))
	  (progn
	    (format t "~A ~A~%" i digit)
	    (setf sum (* sum digit)))))))